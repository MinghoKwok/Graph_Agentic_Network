ðŸ“¤ [DEBUG] Action Prompt for Node 1022 | Layer 0 | 20250506_214728:

    You are Node 1022 in a scientific citation network. Your task is to classify yourself into the correct research category based on your text and connections.
    
    ## Few-shot Examples of Label Prediction:

    Example 1:
    Memory:
    1. [Neural_Networks] "A novel deep learning approach for image classification..."
    2. [Reinforcement_Learning] "Q-learning based algorithm for game playing..."
    3. [Neural_Networks] "Convolutional neural networks for computer vision tasks..."

    Current Node Text:
    "Deep learning models for visual recognition tasks..."

    Prediction: Neural_Networks
    Reasoning: The current text focuses on deep learning and visual recognition, which closely matches the Neural_Networks examples in memory.

    Example 2:
    Memory:
    1. [Probabilistic_Methods] "Bayesian networks for uncertainty modeling..."
    2. [Neural_Networks] "Recurrent neural networks for sequence prediction..."
    3. [Probabilistic_Methods] "Markov models for time series analysis..."

    Current Node Text:
    "Hidden Markov models for speech recognition..."

    Prediction: Probabilistic_Methods
    Reasoning: The text discusses Markov models, which is a probabilistic method, matching the Probabilistic_Methods examples in memory.

    Example 3:
    Memory:
    1. [Neural_Networks] "Deep learning architectures for natural language processing..."
    2. [Theory] "Theoretical analysis of algorithm complexity..."
    3. [Neural_Networks] "Transformer models for sequence modeling..."

    Current Node Text:
    "Attention mechanisms in deep learning models for text understanding..."

    Prediction: Neural_Networks
    Reasoning: Although the text mentions theoretical concepts like attention mechanisms, the focus is on deep learning models and their application to text understanding, which closely matches the Neural_Networks examples in memory.
    
    ## Your State:
    - Node ID: 1022
    - Layer: 0
    - Your Text:
    "j
Abstract: So applying Corollary 4.3 to the second equation in (47), we conclude that From (38), we then get jg(y n + ~ k( y (51), we obtain jy n + ~ k( From (39) we see that the right-hand side of (54) is bounded by . Since the system _ y = A 1 y k( y )b 2 jyj ev N : (55) Now, suppose lim sup t!1 jy(t)j = &gt; 0. Then jyj ev 2. Since j k(y)j Ljyj, we have and using (56) and (57), we obtain j~yj ev 2(~-1 + -2 )L + -2 ffi : (58) (Note that if the right-hand side of (58) is 1 , then the inequality is trivial since we know from (52) that j~yj ev 1 .) From (53), (56), and (58), we have -2 ffi + N ffi &gt; N . However, from (55) we see that (60) still holds. So we established (60) in all cases. From (40) we then get jyj ev 2 Taking the lim sup t!1 of the left-hand side of (61), we have 1 2 + N("-2 + 1)ffi i.e. 2 N("-2 + 1)ffi. Substituting this into (58) and (61), we get j~yj ev ffi, and jyj ev 2 N("-2 + 1)ffi . So, if we take N = 2 N("-2 + 1)(1 + 2L(~-1 + -2 )) + -2 ; the conclusion follows. To complete the proof, we need to deal with the general case of m &gt; 1 inputs. This is done by induction on m, as in the proof in [14], and will be omitted here. 2 [1] Fuller, A.T., "In the large stability of relay and saturated control systems with linear controllers," Int. J. Control, 10(1969): 457-480. [2] Gutman, P-O., and P. Hagander, "A new design of constrained controllers for linear systems," IEEE Transactions on Automat. Contr. AC-30(1985): 22-23. [3] Kosut, R.L., "Design of linear systems with saturating linear control and bounded states," IEEE Trans. Au-tom. Control AC-28(1983): 121-124. [4] Krikelis, N.J., and S.K. Barkas, "Design of tracking systems subject to actuator saturation and integrator wind-up," Int. J. Control 39(1984): 667-682. [5] Schmitendorf, W.E. and B.R. Barmish, "Null controllability of linear systems with constrained controls," SIAM J. Control and Opt. 18(1980): 327-345. [6] Slemrod, M., "Feedback stabilization of a linear control system in Hilbert space," Math. Control Signals Systems 2(1989): 265-285. [7] Slotine, J-J.E., and W. Li, Applied Nonlinear Control, Prentice-Hall, Englewood Cliffs, 1991. [8] Sontag, E.D., "An algebraic approach to bounded controllability of linear systems," Int. J. Control 39(1984): 181-188. [9] Sontag, E.D., "Remarks on stabilization and input-to-state stability," Proc. IEEE CDC, Tampa, Dec. 1989, IEEE Publications, 1989, pp. 1376-1378. [10] Sontag, E.D., Mathematical Control Theory: Deterministic Finite Dimensional Systems, Springer, New York, 1990. [11] Sontag, E.D., and H.J. Sussmann, "Nonlinear output feedback design for linear systems with saturating controls," Proc. IEEE CDC, Honolulu, Dec. 1990, IEEE Publications, 1990, pp. 3414-3416. [12] Sussmann, H. J. and Y. Yang, "On the stabilizability of multiple integrators by means of bounded feedback controls" Proc. IEEE CDC, Brighton, UK, Dec. 1991, IEEE Publications, 1991: 70-73. [13] Teel, A.R., "Global stabilization and restricted tracking for multiple integrators with bounded controls," Systems and Control Letters 18(1992): 165-171. [14] Yang, Y., H.J. Sussmann and E.D. Sontag, "Stabilization of linear systems with bounded controls," Proc. June 1992 NOLCOS, Bordeaux, (M. Fliess, Ed.), IFAC Publications, pp. 15-20. [15] Yang, Y., Global Stabilization of Linear Systems with Bounded Feedback, Ph. D. Thesis, Mathematics Department, Rutgers University, 1993. j~yj ev M (~-1 + -2 ) + ffi-2 ; (50)"
    - Neighbors: [1282]
    - Available labeled neighbors to retrieve from: None
    - Neighbors with predicted labels: None
    
    You are an autonomous agent with planning capabilities. You may perform multiple actions in sequence to achieve better results.

    ## Decide Your Next Action(s)
    Important: You are allowed and encouraged to return MULTIPLE actions in sequence. You MUST respond with a JSON array even if there's only one action. 
    Example of a valid response:
    ```json
    [
      {"action_type": "update", "predicted_label": "Neural_Networks"},
      {"action_type": "broadcast"}
    ]
    ```
    ```json
    [
      {"action_type": "retrieve", "target_nodes": [1, 2, 3], "info_type": "text"},
      {"action_type": "rag_query", "query": "machine learning", "top_k": 10}
    ]
    ```
    Invalid response:
    ```json
    {"action_type": "update", "predicted_label": "Neural_Networks"}
    ```

    ### Available Actions:

    1. "retrieve": get information from other nodes
    - Format: {"action_type": "retrieve", "target_nodes": [IDs], "info_type": "text"}

    2. "broadcast": send a message to neighbors if and *only* if you already have a label or predicted label
    - Format: {"action_type": "broadcast", "target_nodes": [IDs], "message": "some message"}
    - Use this *only* when you already have a label orpredicted label to share it with neighbors. 
    - You MUST NOT use "broadcast" unless you already have a label orpredicted label (i.e., after an "update" action).
    - So "update" action always works before "broadcast" in the same layer.

    
        3. "update": decide your label *only* when the memory has enough information(labeled nodes, with text and label)
        - Format: {"action_type": "update", "predicted_label": choose one of allowed labels: ["Label_0", "Label_1", "Label_2", "Label_3", "Label_4", "Label_5", "Label_6"]}
        - You MUST choose one of the allowed label strings exactly as listed.
        - You MUST base your decision only on the definitions of the labels and the memory nodes with known labels.
        - You should ALWAYS follow this action with a "broadcast" to share your label with neighbors.

    4. "rag_query": search globally for similar labeled nodes, can make up "retrieve" action
    - Format: {"action_type": "rag_query", "query": [Your node ID, e.g. 13/57], "top_k": number of nodes to retrieve}
    - Use this when you don't have enough informative neighbors or memory, and need global examples.
    - You must use your own node ID as the query.

    5. "no_op": take no action
    - Format: {"action_type": "no_op"}

    

    ## Planning Your Steps
    1. If you have a predicted label, you can choose to broadcast it or continue to retrieve nodes with labels.
    2. If you don't have a predicted label, think like a planner: first gather evidence (retrieve, rag_query), then make a decision (update), and finally help others (broadcast).
    Think about the following:
    - If you cannot predict your label yet, need more context to predict your label â†’ `retrieve`, `rag_query`
    - Are you confident to predict your label? â†’ `update`
    - Have you shared your label or predicted label with neighbors? â†’ `broadcast`
    - Only broadcast if you have a predicted label or training label, AND your memory is not empty. If not, choose "retrieve" or "rag_query" first.
    - If any neighbors already have predicted labels, it is recommended to retrieve from them first.
    
================================================================================