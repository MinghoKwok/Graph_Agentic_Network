ðŸ“¤ [DEBUG] Fallback Prompt for Node 2047 | Layer 0 | 20250506_224143:
You are a label prediction agent.

You will be given a set of labeled memory items and a new node to classify.
Each example includes a few labeled texts as memory and a new text to classify.
Use the memory to predict the label for the current text.

## Example 1:
Memory:
1. [Label_2] "Hidden Markov models for sequence modeling and pattern discovery."
2. [Label_1] "Neural networks for text classification."
3. [Label_2] "Bayesian models for probabilistic inference."
Current Node Text:
"Markov models for speech sequence alignment."
Prediction: Label_2
Reasoning: The text discusses Markov models and speech alignment, which closely match Label_2 examples in memory.

## Example 2:
Memory:
1. [Label_2] "Hidden Markov models for biological sequence alignment."
2. [Label_6] "Improving ensemble model selection with probabilistic voting."
3. [Label_2] "Bayesian inference for protein sequence homology detection."
4. [Label_6] "Boosted decision trees for structured data classification."
5. [Label_3] "Non-reversible Markov chains for MCMC sampling."
Current Node Text:
"Homology detection in genetic sequences using Bayesian Markov modeling."
Prediction: Label_2
Reasoning: Although both Label_2 and Label_6 are well represented in memory, the current node text focuses on homology detection and Bayesian modeling, which strongly aligns with Label_2 examples related to biological sequences and probabilistic inference, rather than ensemble or structured classifiers.

## Your Turn:
Memory:
1. [Label_1] "nan Abstract: Co-evolution of Pursuit and Evasion II: Simulation Methods and Results fl Abstract In a previous SAB paper [10], we presented the scient..."
2. [Label_1] "Environmental Effects on Minimal Behaviors in the Minimat World Abstract: The structure of an environment affects the behaviors of the organisms that ..."
3. [Label_1] "Fitness Landscapes and Difficulty in Genetic Programming Abstract: The structure of the fitness landscape on which genetic programming operates is exa..."
4. [Label_1] "Incremental Co-evolution of Organisms: A New Approach for Optimization and Discovery of Strategies Abstract: In the field of optimization and machine ..."
5. [Label_1] "An Artificial Life Model for Investigating the Evolution of Modularity Abstract: To investigate the issue of how modularity emerges in nature, we pres..."

Text to classify:
"Evolutionary wanderlust: Sexual selection with directional mate preferences.  Evolutionary wanderlust: Sexual selection with directional mate preferences
Abstract: In the pantheon of evolutionary forces, the optimizing Apollonian powers of natural selection are generally assumed to dominate the dark Dionysian dynamics of sexual selection. But this need not be the case, particularly with a class of selective mating mechanisms called `directional mate preferences' (Kirkpatrick, 1987). In previous simulation research, we showed that nondirectional assortative mating preferences could cause populations to spontaneously split apart into separate species (Todd & Miller, 1991). In this paper, we show that directional mate preferences can cause populations to wander capriciously through phenotype space, under a strange form of runaway sexual selection, with or without the influence of natural selection pressures. When directional mate preferences are free to evolve, they do not always evolve to point in the direction of natural-selective peaks. Sexual selection can thus take on a life of its own, such that mate preferences within a species become a distinct and important part of the environment to which the species' phenotypes adapt. These results suggest a broader conception of `adaptive behavior', in which attracting potential mates becomes as important as finding food and avoiding predators. We present a framework for simulating a wide range of directional and non-directional mate preferences, and discuss some practical and scientific applications of simu lating sexual selection."

Respond strictly in JSON:
{"action_type": "update", "predicted_label": "Label_X"}
Allowed labels: ["Label_0", "Label_1", "Label_2", "Label_3", "Label_4", "Label_5", "Label_6"]

================================================================================